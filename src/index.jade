doctype html
html
    head
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
        title Git Your FTC On

        link(rel='stylesheet', type='text/css', href='build/build.css')

    body

        article

            section
                h1 Git

            section
                h2.bullet Thanks
                h3.bullet AJ made most of these slides

            section
                h2.bullet So. Git.
                h3.bullet Technical definition:
                h3.bullet Git is a distributed version control system.
                h3.bullet Better definition:
                h3.bullet Git is a piece of software that helps you keep track of your software.

            section
                h2.bullet Why Git?
                h3.bullet Keeps a history of your code
                h3.bullet Undo on steroids
                h3.bullet Handles conflicts (merges)
                h3.bullet Also:

            section.emphatic-text(data-bespoke-backdrop='emphatic')
                img(src='images/GitHub-Mark-120px-plus.png', alt='GitHub cat logo', width='120', height='120')
                img.bullet(src='images/GitHub_Logo.png', alt='GitHub wordmark', width='250', height='102')

            section
                h2.bullet Let's begin - do this once.
                h3.bullet First: make a repository on your local computer.
                h3.bullet This is called <code>init</code>ializing.
                pre.bullet
                    code.language-bash.
                        $ pwd
                        /home/nathan/Programming/Projects_in_cs/Robotic/

                        $ git init
                        Initialized empty Git repository in
                        /home/nathan/Programming/Projects_in_cs/Robotics/.git/

                        $ git status
                        On branch master
                        Initial commit
                        nothing to commit (create/copy files and use "git add" to track)

            section
                h2.bullet Add some code
                pre.bullet
                    code.language-bash.
                        $ echo "Readme" > README.md

                        $ git add README.md

                        $ git commit -m "Initial Commit"


            section
                h2.bullet Sync with GitHub
                h3.bullet Find the URL on your GitHub page.
                pre.bullet
                    code.language-bash.
                        $ git remote add origin https://github.com/Garfield-HS-Projects/TANK.git

                        $ git push origin master

            section
                h2.bullet For everyone else
                h3.bullet All other team members need to do this.
                h3.bullet You only need to do this once.
                pre.bullet
                    code.language-bash.
                        $ git clone https://github.com/Garfield-HS-Projects/TANK.git

            section
                h2.bullet Make some changes...
                pre.bullet
                    code.language-bash.
                        $ echo 'Hello, world!' > README.md
                        $ git status
                        On branch master
                        Your branch is up-to-date with 'origin/master'.
                        Changes not staged for commit:
                            (use "git add <file>..." to update what will be committed)
                            (use "git checkout -- <file>..." to discard changes in working directory)

                            modified:   README.md

                        no changes added to commit (use "git add" and/or "git commit -a")

            section.emphatic-text(data-bespoke-backdrop='emphatic')
                h2.bullet When in doubt,
                h2.bullet
                    code git status

            section
                h2.bullet Commits
                h3.bullet The <strong>working directory</strong> is what you see in your editor.
                h3.bullet The <strong>staging area</strong> is where you queue changes to commit them.
                h3.bullet A <strong>commit</strong> is a snapshot of your repository at a particular point in time.

            section
                h2 A picture is worth 1000 words (assumes x86)
                img(src='images/git-staging-area.png', alt='Git staging area diagram', height='195', width='343')

            section
                h2.bullet Commit some changes
                h3.bullet <code>git add</code> takes stuff in the working directory and stages it
                h3.bullet You need to <code>git add</code> every time you change stuff - not just when you add new files!
                h3.bullet <code>git commit</code> commits the changes in the staging area

            section
                h2.bullet Example
                pre.bullet
                    code.language-bash.
                        $ git status
                        On branch master
                        Your branch is up-to-date with 'origin/master'.
                        Changes not staged for commit:
                            (use "git add <file>..." to update what will be committed)
                            (use "git checkout -- <file>..." to discard changes in working directory)

                            modified:   README.md

                        no changes added to commit (use "git add" and/or "git commit -a")

                        $ git add README.md

                        $ git commit -m "Made README say hello."
                        [master cca3472] Made README say hello.
                        &nbsp;1 file changed, 1 insertion(+), 1 deletion(-)

            section
                h2.bullet What just happened?
                h3.bullet We made some changes
                h3.bullet We staged them, with <code>git add</code>
                h3.bullet We committed, with <code>git commit</code>

            section
                pre
                    code.language-bash.
                        $ git status
                        On branch master
                        Your branch is ahead of 'origin/master' by 1 commit.
                        &nbsp;&nbsp;(use "git push" to publish your local commits)
                        nothing to commit, working directory clean

            section
                h2.bullet We did it!
                h3.bullet We used <code>git status</code>, because we always use <code>git status</code>
                h3.bullet Then we used <code>git log</code> to see a log of all our commits (there's only one so far)

            section
                h2.bullet Pushing
                h3.bullet We've been working locally so far
                h3.bullet We want to share
                h3.bullet
                    a(href='https://github.com/') GitHub

            section
                h2.bullet GitHub
                h3.bullet Free online hosting for Git
                h3.bullet "Social coding"
                h3.bullet GitHub != Git

            section
                h2 Example
                pre
                    code.language-bash.
                        $ git pull
                        Username for 'https://github.com': NathanMer
                        Password for 'https://NathanMer@github.com': 
                        Already up-to-date.

                        $ git push
                            Username for 'https://github.com': NathanMer
                            Password for 'https://NathanMer@github.com':
                            Counting objects: 3, done.
                            Writing objects: 100% (3/3), 276 bytes | 0 bytes/s, done.
                            Total 3 (delta 0), reused 0 (delta 0)
                            To https://github.com/Garfield-HS-Projects/TANK.git
                            &nbsp;&nbsp;d6ff69b..cca3472  master -> master

            section
                h3.bullet "Hey, Git! Take the local branch <code>master</code>, and push (upload) it to the <code>origin</code> remote."

            section
                h2.bullet Merge Conflicts!
                h3.bullet Sometimes two people edit the same file in a way git can't fix
                h3.bullet This can usually be avoided by spliting your project into parts
                h3.bullet Each person should only edit the files for their part.
                h3.bullet Then people will not be editing the same files.

            section
                h2 Access this presention again
                h3 <a href="http://saasrobotics.com/presentation-git-your-ftc-on">http://saasrobotics.com/presentation-git-your-ftc-on</a>
                p
                    img(src='images/qr.gif', alt='QR code to presentation URL')
                h4 Or, <a href="https://github.com/redshiftrobotics/presentation-git-your-ftc-on"><code>git clone</code> the source</a>.

            script(src='build/build.js')
